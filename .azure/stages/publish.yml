parameters:
  - name: isPreRelease
    type: boolean
  - name: nodeVersion
    type: string

stages:
- stage: Publish
  displayName: Publish the VSIX
  dependsOn:
    - Build
    - Approval
  jobs:
  - job: Publish
    variables:
    - name: vsixName
      value: $[ stageDependencies.Build.Build.outputs['SetExtensionName.VSIX'] ]
    steps:
    - task: NodeTool@0
      displayName: ðŸ”¨ Install Node.js
      inputs:
        versionSpec: ${{ parameters.nodeVersion }}

    - download: current
      artifact: extension
      displayName: ðŸšš Download extension artifact

    - download: current
      artifact: extension-manifest
      displayName: ðŸšš Download extension manifest artifact

    - download: current
      artifact: extension-signature
      displayName: ðŸšš Download extension signature artifact

    # Copy everything into the same folder before we run the publish. For some reason this is needed for the publish command.
    - script: |
        cp $(Pipeline.Workspace)/extension/$(vsixName) .
        cp $(Pipeline.Workspace)/extension-manifest/$(vsixName).manifest .
        cp $(Pipeline.Workspace)/extension-signature/$(vsixName).signature.p7s .

    - ${{ if parameters.isPreRelease }}:
      - bash: echo "Publishing PreRelease"
      - script: npx @vscode/vsce@latest publish --packagePath $(vsixName) --manifestPath $(vsixName).manifest --signaturePath $(vsixName).signature.p7s --pre-release
        displayName: Publish pre-release extension
        env:
          # Marketplace PAT needs to be uploaded as a pipeline variable
          VSCE_PAT: $(marketplace-pat)

    - ${{ else }}:
      - bash: echo "Publishing Release"
      - script: npx @vscode/vsce@latest publish --packagePath $(vsixName) --manifestPath $(vsixName).manifest --signaturePath $(vsixName).signature.p7s
        displayName: Publish extension
        env:
          VSCE_PAT: $(marketplace-pat)
