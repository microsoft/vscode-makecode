parameters:
  - name: isPreRelease
    type: boolean
  - name: nodeVersion
    type: string
  - name: signType
    type: string

stages:
- stage: Build
  displayName: Build the VSIX & sign it
  jobs:
  - job: Build
    steps:
    - checkout: self

    - task: NodeTool@0
      displayName: ðŸ”¨ Install Node.js
      inputs:
        versionSpec: ${{ parameters.nodeVersion }}

    # Create a unique filename for the extension vsix to match the verison number
    - bash: |
        VSIX=$(node -p "require(\"./package.json\").publisher + \".\" + require(\"./package.json\").name + \".\" + require(\"./package.json\").version + \".vsix\"")
        echo "##vso[task.setvariable variable=VSIX;isOutput=true]$VSIX"
      name: SetExtensionName
      displayName: Set VSIX file name

    # Yarn package script to build the vsix file
    - bash: |
        echo "Compiling Production Webpack"
        yarn && yarn package-web
        echo "Compiled Production Webpack"
      displayName: Compile

    - ${{ if parameters.isPreRelease }}:
      - script: npx @vscode/vsce@latest package -o $(Build.ArtifactStagingDirectory)/$(SetExtensionName.VSIX) --pre-release
        displayName: Package pre-release extension VSIX

    - ${{ else }}:
      - script: npx @vscode/vsce@latest package -o $(Build.ArtifactStagingDirectory)/$(SetExtensionName.VSIX)
        displayName: Package extension VSIX

    - task: 1ES.PublishPipelineArtifact@1
      inputs:
        path: $(Build.ArtifactStagingDirectory)/$(SetExtensionName.VSIX)
        artifact: extension
        sbomBuildDropPath: $(Build.ArtifactStagingDirectory)
    
    - template: ../steps/sign.yml
      parameters:
        signType: ${{ parameters.signType }}
